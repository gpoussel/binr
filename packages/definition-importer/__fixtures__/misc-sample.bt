// enum int
enum int {TYPE_UNKNOWN, TYPE_HEADER, TYPE_TRAILER, TYPE_OBJ, TYPE_ENDOBJ};

// switch on strings
struct
{
    CHAR  Signature[4];
    DWORD Length;
    DWORD Align;
    DWORD NextOffset;

    switch(Signature)
    {
        // rawdata of file
        case "BODY":
            BYTE Data[Length]; break;

        // string data used for languages
        case "CSTR":
            BYTE Data[Length]; break;

        // semicolon separated block names
        // allways last data block (if exist)
        case "PATH":
            STRING Data[Length]; break;
    }
} DATA;

// Binary operations and cast
int sleb128_value(sleb128 &u) {
    local int result;
    local ubyte cur;

    result = u.val[0];
    if(result <= 0x7f) {
        result = (result << 25) >> 25;
    } else {
        cur = u.val[1];
        result = (result & 0x7f) | ((uint)(cur & 0x7f) << 7);
        if(cur <= 0x7f) {
            result = (result << 18) >> 18;
        } else {
            cur = u.val[2];
            result |= (uint)(cur & 0x7f) << 14;
            if(cur <= 0x7f) {
                result = (result << 11) >> 11;
            } else {
                cur = u.val[3];
                result |= (uint)(cur & 0x7f) << 21;
                if(cur <= 0x7f) {
                    result = (result << 4) >> 4;
                } else {
                    cur = u.val[4];
                    result |= (uint)cur << 28;
                }
            }
        }
    }

    return result;
}