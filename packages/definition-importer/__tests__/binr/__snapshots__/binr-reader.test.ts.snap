// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BinrDefinitionImporter accepts == and || 1`] = `
Definition {
  "_content": Array [
    StructDeclarationStatement {
      "_annotations": Array [],
      "_body": BlockStatement {
        "_content": Array [
          VariableDeclarationStatement {
            "_annotations": Array [],
            "_bitfield": undefined,
            "_modifiers": Array [],
            "_variableDeclarations": Array [
              VariableDeclaration {
                "_annotations": Array [],
                "_arraySelector": ExpressionArraySelector {
                  "_innerExpression": 1,
                },
                "_bitfield": undefined,
                "_initializationExpression": undefined,
                "_name": "foo",
                "_typeArguments": Array [],
              },
            ],
            "_variableType": NamedType {
              "_array": false,
              "_modifiers": Array [],
              "_name": "int",
            },
          },
        ],
      },
      "_name": "a",
      "_parameters": Array [],
    },
  ],
}
`;

exports[`BinrDefinitionImporter accepts bitmasks 1`] = `
Definition {
  "_content": Array [
    BitmaskDeclarationStatement {
      "_annotations": Array [],
      "_baseType": RestrictedType {
        "_baseType": NamedType {
          "_array": false,
          "_modifiers": Array [],
          "_name": "int",
        },
        "_size": 16,
      },
      "_declarations": Array [
        BitmaskDeclarationElement {
          "_expression": 10,
          "_name": "A",
        },
      ],
      "_name": "foo",
    },
    StructDeclarationStatement {
      "_annotations": Array [],
      "_body": BlockStatement {
        "_content": Array [],
      },
      "_name": "A",
      "_parameters": Array [],
    },
  ],
}
`;

exports[`BinrDefinitionImporter accepts enumerations 1`] = `
Definition {
  "_content": Array [
    EnumDeclarationStatement {
      "_annotations": Array [],
      "_baseType": RestrictedType {
        "_baseType": NamedType {
          "_array": false,
          "_modifiers": Array [],
          "_name": "int",
        },
        "_size": 16,
      },
      "_declarations": Array [
        EnumDeclarationElement {
          "_expression": 10,
          "_name": "A",
        },
      ],
      "_name": "foo",
    },
    StructDeclarationStatement {
      "_annotations": Array [],
      "_body": BlockStatement {
        "_content": Array [],
      },
      "_name": "A",
      "_parameters": Array [],
    },
  ],
}
`;
