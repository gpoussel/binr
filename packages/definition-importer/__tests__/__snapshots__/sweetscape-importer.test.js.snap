// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sweetscape Importer creates DEX definition 1`] = `
Array [
  undefined,
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [],
        "name": "odexpad",
      },
    ],
    "local": true,
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "int",
    },
  },
  Object {
    "alias": "SHA1",
    "annotations": Array [],
    "name": Object {
      "array": false,
      "name": "ubyte",
    },
    "selector": Object {
      "expression": undefined,
      "type": "arraySelector",
    },
    "type": "typeAlias",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "ret",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "tmp",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              undefined,
              undefined,
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "increment": undefined,
          "initialization": undefined,
          "type": "forStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "SHA1Read",
    "parameters": Array [
      Object {
        "name": "sig",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "SHA1",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "DexMagicRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "arraySelector": undefined,
                "name": "dex",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "char",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "newline",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "char",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "arraySelector": undefined,
                "name": "ver",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "char",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "zero",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "char",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                undefined,
                Object {
                  "assignmentExpression": undefined,
                  "type": "returnStatement",
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "dex_magic",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "DexMagicRead",
    "parameters": Array [
      Object {
        "name": "m",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "dex_magic",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ULeb128Read",
      },
      Object {
        "key": "comment",
        "value": "Unsigned little-endian base 128 value",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "uleb128 element",
                  },
                ],
                "name": "val",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ubyte",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "uleb128 element",
                        },
                      ],
                      "name": "val",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "ubyte",
                  },
                },
                Object {
                  "condition": undefined,
                  "trueStatement": Object {
                    "statements": Array [
                      Object {
                        "annotations": Array [],
                        "declarations": Array [
                          Object {
                            "annotations": Array [
                              Object {
                                "key": "comment",
                                "value": "uleb128 element",
                              },
                            ],
                            "name": "val",
                          },
                        ],
                        "type": "variableDeclaration",
                        "variableType": Object {
                          "array": false,
                          "name": "ubyte",
                        },
                      },
                      Object {
                        "condition": undefined,
                        "trueStatement": Object {
                          "statements": Array [
                            Object {
                              "annotations": Array [],
                              "declarations": Array [
                                Object {
                                  "annotations": Array [
                                    Object {
                                      "key": "comment",
                                      "value": "uleb128 element",
                                    },
                                  ],
                                  "name": "val",
                                },
                              ],
                              "type": "variableDeclaration",
                              "variableType": Object {
                                "array": false,
                                "name": "ubyte",
                              },
                            },
                            Object {
                              "condition": undefined,
                              "trueStatement": Object {
                                "statements": Array [
                                  Object {
                                    "annotations": Array [],
                                    "declarations": Array [
                                      Object {
                                        "annotations": Array [
                                          Object {
                                            "key": "comment",
                                            "value": "uleb128 element",
                                          },
                                        ],
                                        "name": "val",
                                      },
                                    ],
                                    "type": "variableDeclaration",
                                    "variableType": Object {
                                      "array": false,
                                      "name": "ubyte",
                                    },
                                  },
                                ],
                                "type": "statementList",
                              },
                              "type": "ifStatement",
                            },
                          ],
                          "type": "statementList",
                        },
                        "type": "ifStatement",
                      },
                    ],
                    "type": "statementList",
                  },
                  "type": "ifStatement",
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "uleb128",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "result",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "uint",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "cur",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "ubyte",
          },
        },
        undefined,
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
              undefined,
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    undefined,
                    undefined,
                    Object {
                      "condition": undefined,
                      "trueStatement": Object {
                        "statements": Array [
                          undefined,
                          undefined,
                          Object {
                            "condition": undefined,
                            "trueStatement": Object {
                              "statements": Array [
                                undefined,
                                undefined,
                              ],
                              "type": "statementList",
                            },
                            "type": "ifStatement",
                          },
                        ],
                        "type": "statementList",
                      },
                      "type": "ifStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "uleb128_value",
    "parameters": Array [
      Object {
        "name": "u",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "uleb128",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "uint",
    },
    "type": "functionDeclaration",
  },
  Object {
    "alias": "uleb128p1",
    "annotations": Array [],
    "name": Object {
      "array": false,
      "name": "uleb128",
    },
    "type": "typeAlias",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "uleb128p1_value",
    "parameters": Array [
      Object {
        "name": "u",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "uleb128",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "int",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ULeb128Read",
    "parameters": Array [
      Object {
        "name": "u",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "uleb128",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "SLeb128Read",
      },
      Object {
        "key": "comment",
        "value": "Signed little-endian base 128 value",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "sleb128 element",
                  },
                ],
                "name": "val",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ubyte",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "sleb128 element",
                        },
                      ],
                      "name": "val",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "ubyte",
                  },
                },
                Object {
                  "condition": undefined,
                  "trueStatement": Object {
                    "statements": Array [
                      Object {
                        "annotations": Array [],
                        "declarations": Array [
                          Object {
                            "annotations": Array [
                              Object {
                                "key": "comment",
                                "value": "sleb128 element",
                              },
                            ],
                            "name": "val",
                          },
                        ],
                        "type": "variableDeclaration",
                        "variableType": Object {
                          "array": false,
                          "name": "ubyte",
                        },
                      },
                      Object {
                        "condition": undefined,
                        "trueStatement": Object {
                          "statements": Array [
                            Object {
                              "annotations": Array [],
                              "declarations": Array [
                                Object {
                                  "annotations": Array [
                                    Object {
                                      "key": "comment",
                                      "value": "sleb128 element",
                                    },
                                  ],
                                  "name": "val",
                                },
                              ],
                              "type": "variableDeclaration",
                              "variableType": Object {
                                "array": false,
                                "name": "ubyte",
                              },
                            },
                            Object {
                              "condition": undefined,
                              "trueStatement": Object {
                                "statements": Array [
                                  Object {
                                    "annotations": Array [],
                                    "declarations": Array [
                                      Object {
                                        "annotations": Array [
                                          Object {
                                            "key": "comment",
                                            "value": "sleb128 element",
                                          },
                                        ],
                                        "name": "val",
                                      },
                                    ],
                                    "type": "variableDeclaration",
                                    "variableType": Object {
                                      "array": false,
                                      "name": "ubyte",
                                    },
                                  },
                                ],
                                "type": "statementList",
                              },
                              "type": "ifStatement",
                            },
                          ],
                          "type": "statementList",
                        },
                        "type": "ifStatement",
                      },
                    ],
                    "type": "statementList",
                  },
                  "type": "ifStatement",
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "sleb128",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "result",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "cur",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "ubyte",
          },
        },
        undefined,
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "sleb128_value",
    "parameters": Array [
      Object {
        "name": "u",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "sleb128",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "int",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "SLeb128Read",
    "parameters": Array [
      Object {
        "name": "u",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "sleb128",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "baseType": Object {
      "array": false,
      "name": "ubyte",
    },
    "declarations": Array [
      Object {
        "name": "VALUE_BYTE",
        "value": undefined,
      },
      Object {
        "name": "VALUE_SHORT",
        "value": undefined,
      },
      Object {
        "name": "VALUE_CHAR",
        "value": undefined,
      },
      Object {
        "name": "VALUE_INT",
        "value": undefined,
      },
      Object {
        "name": "VALUE_LONG",
        "value": undefined,
      },
      Object {
        "name": "VALUE_FLOAT",
        "value": undefined,
      },
      Object {
        "name": "VALUE_DOUBLE",
        "value": undefined,
      },
      Object {
        "name": "VALUE_STRING",
        "value": undefined,
      },
      Object {
        "name": "VALUE_TYPE",
        "value": undefined,
      },
      Object {
        "name": "VALUE_FIELD",
        "value": undefined,
      },
      Object {
        "name": "VALUE_METHOD",
        "value": undefined,
      },
      Object {
        "name": "VALUE_ENUM",
        "value": undefined,
      },
      Object {
        "name": "VALUE_ARRAY",
        "value": undefined,
      },
      Object {
        "name": "VALUE_ANNOTATION",
        "value": undefined,
      },
      Object {
        "name": "VALUE_NULL",
        "value": undefined,
      },
      Object {
        "name": "VALUE_BOOLEAN",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedValueRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "t",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "VALUE",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "i",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "body": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Encoded value element",
                        },
                      ],
                      "name": "val",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "ubyte",
                  },
                },
              ],
              "type": "statementList",
            },
            "condition": undefined,
            "increment": undefined,
            "initialization": undefined,
            "type": "forStatement",
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "size",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "name": "type",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "VALUE",
          },
        },
      ],
    },
    "name": "EncodedValue",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "statements": Array [
            Object {
              "body": Object {
                "statements": Array [
                  undefined,
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "VALUE_BYTE",
                "VALUE_SHORT",
                "VALUE_INT",
                "VALUE_LONG",
                "VALUE_FLOAT",
                "VALUE_DOUBLE",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  undefined,
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "VALUE_STRING",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  undefined,
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "VALUE_TYPE",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  undefined,
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "VALUE_FIELD",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  undefined,
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "VALUE_ENUM",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  undefined,
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "VALUE_ARRAY",
                "VALUE_ANNOTATION",
                "VALUE_BOOLEAN",
                "VALUE_NULL",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [],
                "type": "statementList",
              },
              "labels": Array [],
            },
          ],
          "type": "switchStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedValueRead",
    "parameters": Array [
      Object {
        "name": "v",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "EncodedValue",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "shift",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "ret",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int64",
          },
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "body": Object {
            "statements": Array [
              undefined,
              undefined,
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "increment": undefined,
          "initialization": undefined,
          "type": "forStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedValueValue",
    "parameters": Array [
      Object {
        "name": "v",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "EncodedValue",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "int64",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedValueStructRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Value type",
                  },
                ],
                "bits": undefined,
                "name": "value_type",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "VALUE",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Value clarifying argument",
                  },
                ],
                "bits": undefined,
                "name": "value_arg",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ubyte",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "valstr",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "typestr",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string",
            },
          },
          Object {
            "statements": Array [
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Byte value",
                            },
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "ubyte",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_BYTE",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Short value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_SHORT",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Char value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_CHAR",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Int value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_INT",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Long value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_LONG",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Float value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_FLOAT",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Double value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_DOUBLE",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "String value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_STRING",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Type value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_TYPE",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Field value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_FIELD",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Method value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_METHOD",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Enum value",
                            },
                          ],
                          "arguments": Array [
                            undefined,
                            undefined,
                          ],
                          "name": "value",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "EncodedValue",
                      },
                    },
                    undefined,
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_ENUM",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Encoded array",
                            },
                          ],
                          "name": "array",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "encoded_array",
                      },
                    },
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_ARRAY",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Encoded annotation",
                            },
                          ],
                          "name": "annotation",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "encoded_annotation",
                      },
                    },
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_ANNOTATION",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "left": undefined,
                      "operator": "=",
                      "right": undefined,
                      "type": "binaryExpression",
                    },
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_NULL",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    undefined,
                    Object {
                      "condition": undefined,
                      "falseStatement": undefined,
                      "trueStatement": Object {
                        "statements": Array [
                          undefined,
                        ],
                        "type": "statementList",
                      },
                      "type": "ifStatement",
                    },
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "VALUE_BOOLEAN",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  Object {
                    "type": "defaultStatement",
                  },
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [],
                  "type": "statementList",
                },
                "labels": Array [],
              },
            ],
            "type": "switchStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "encoded_value",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedValueStructRead",
    "parameters": Array [
      Object {
        "name": "v",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_value",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedArrayRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of elements in array",
                  },
                ],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Encoded value element",
                  },
                ],
                "arraySelector": undefined,
                "name": "values",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "encoded_value",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "encoded_array",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "count",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "dots",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "val",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              undefined,
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    undefined,
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "increment": undefined,
          "initialization": undefined,
          "type": "forStatement",
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedArrayRead",
    "parameters": Array [
      Object {
        "name": "a",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_array",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "AnnotationElementRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "StringIdReadUleb",
                  },
                  Object {
                    "key": "comment",
                    "value": "String ID of annotation element name",
                  },
                ],
                "name": "name_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Encoded value",
                  },
                ],
                "name": "value",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "encoded_value",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "annotation_element",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "name",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "AnnotationElementRead",
    "parameters": Array [
      Object {
        "name": "e",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "annotation_element",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedAnnotationRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "LongTypeIdReadUleb",
                  },
                  Object {
                    "key": "comment",
                    "value": "Annotation type",
                  },
                ],
                "name": "type_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of name-value mappings in annotation",
                  },
                ],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Encoded annotation contents",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "elements",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotation_element",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "encoded_annotation",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedAnnotationRead",
    "parameters": Array [
      Object {
        "name": "a",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_annotation",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Magic value",
                  },
                ],
                "name": "magic",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "dex_magic",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "Alder32 checksum of rest of file",
                  },
                ],
                "name": "checksum",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "SHA-1 signature of rest of file",
                  },
                ],
                "name": "signature",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "SHA1",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File size in bytes",
                  },
                ],
                "name": "file_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Header size in bytes",
                  },
                ],
                "name": "header_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "Endianness tag",
                  },
                ],
                "name": "endian_tag",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of link section",
                  },
                ],
                "name": "link_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of link section",
                  },
                ],
                "name": "link_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of map list",
                  },
                ],
                "name": "map_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Count of strings in the string ID list",
                  },
                ],
                "name": "string_ids_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of string ID list",
                  },
                ],
                "name": "string_ids_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Count of types in the type ID list",
                  },
                ],
                "name": "type_ids_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of type ID list",
                  },
                ],
                "name": "type_ids_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Count of items in the method prototype ID list",
                  },
                ],
                "name": "proto_ids_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of method prototype ID list",
                  },
                ],
                "name": "proto_ids_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Count of items in the field ID list",
                  },
                ],
                "name": "field_ids_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of field ID list",
                  },
                ],
                "name": "field_ids_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Count of items in the method ID list",
                  },
                ],
                "name": "method_ids_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of method ID list",
                  },
                ],
                "name": "method_ids_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Count of items in the class definitions list",
                  },
                ],
                "name": "class_defs_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of class definitions list",
                  },
                ],
                "name": "class_defs_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of data section in bytes",
                  },
                ],
                "name": "data_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of data section",
                  },
                ],
                "name": "data_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "header_item",
    "type": "structDeclaration",
  },
  Object {
    "baseType": Object {
      "array": false,
      "name": "uint",
    },
    "declarations": Array [
      Object {
        "name": "DEX_FLAG_VERIFIED",
        "value": undefined,
      },
      Object {
        "name": "DEX_OPT_FLAG_BIG",
        "value": undefined,
      },
      Object {
        "name": "DEX_OPT_FLAG_FIELDS",
        "value": undefined,
      },
      Object {
        "name": "DEX_OPT_FLAG_INVOCATIONS",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Magic value",
                  },
                ],
                "name": "magic",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "dex_magic",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of DEX header",
                  },
                ],
                "name": "dex_offset",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of DEX file",
                  },
                ],
                "name": "dex_length",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of optimized DEX dependency table",
                  },
                ],
                "name": "deps_offset",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of DEX dependency table",
                  },
                ],
                "name": "deps_length",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of optimized data tables",
                  },
                ],
                "name": "opt_offset",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of optimized data tables",
                  },
                ],
                "name": "opt_length",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "DexOptFlagsRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "Flags",
                  },
                ],
                "name": "flags",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DEX_OPT_FLAGS",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Alder32 checksum of dependency table and optimization table",
                  },
                ],
                "name": "checksum",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "dexopt_header_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "ret",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "flags",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "DEX_OPT_FLAGS",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    undefined,
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
              undefined,
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "type": "whileStatement",
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "DexOptFlagsRead",
    "parameters": Array [
      Object {
        "name": "f",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "DEX_OPT_FLAGS",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of string in UTF-16 code units",
                  },
                ],
                "name": "utf16_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "A string in MUTF-8 format",
                  },
                ],
                "name": "data",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "string_item",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "StringDataReader",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of string data",
                  },
                ],
                "name": "string_data_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "pos",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int64",
            },
          },
          undefined,
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "String item",
                  },
                ],
                "name": "string_data",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string_item",
            },
          },
          undefined,
        ],
        "type": "statementList",
      },
    },
    "name": "string_id_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "StringDataReader",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "string_id_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "StringIDListRead",
      },
      Object {
        "key": "comment",
        "value": "String ID list",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "String ID",
                  },
                ],
                "arraySelector": undefined,
                "name": "string_id",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string_id_item",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "size",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "string_id_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "StringIDListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "string_id_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "TypeIDRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "StringIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "String ID for this type descriptor",
                  },
                ],
                "name": "descriptor_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "type_id_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "TypeIDRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "type_id_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "TypeIDListRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Type ID",
                  },
                ],
                "arraySelector": undefined,
                "name": "type_id",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "type_id_item",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "size",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "type_id_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "TypeIDListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "type_id_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Index into type_ids list",
                  },
                ],
                "name": "type_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "type_item",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "TypeItemListRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of entries in type list",
                  },
                ],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "TypeItemRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "Type entry",
                  },
                ],
                "arraySelector": undefined,
                "name": "list",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "type_item",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "type_item_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "TypeItemRead",
    "parameters": Array [
      Object {
        "name": "t",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "type_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "tmp",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              undefined,
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    undefined,
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "increment": undefined,
          "initialization": undefined,
          "type": "forStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "TypeItemListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "type_item_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "desc",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "post",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "len",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              undefined,
              undefined,
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "assignmentExpression": undefined,
                  "type": "returnStatement",
                },
                "type": "ifStatement",
              },
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "type": "whileStatement",
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "condition": undefined,
                      "falseStatement": undefined,
                      "trueStatement": undefined,
                      "type": "ifStatement",
                    },
                    undefined,
                  ],
                  "type": "statementList",
                },
                "condition": undefined,
                "type": "whileStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetLongTypeDescriptor",
    "parameters": Array [
      Object {
        "name": "descriptor",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "string",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ProtoIDItemRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "StringIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "String ID of short-form descriptor",
                  },
                ],
                "name": "shorty_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "TypeIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "Type ID of the return type",
                  },
                ],
                "name": "return_type_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of parameter type list",
                  },
                ],
                "name": "parameters_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "pos",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "int64",
                  },
                },
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Prototype parameter data",
                        },
                      ],
                      "name": "parameters",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "type_item_list",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "proto_id_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ProtoIDItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "proto_id_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ProtoIDListRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Prototype ID",
                  },
                ],
                "arraySelector": undefined,
                "name": "proto_id",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "proto_id_item",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "size",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "proto_id_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ProtoIDListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "proto_id_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "tmp",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              undefined,
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    undefined,
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "increment": undefined,
          "initialization": undefined,
          "type": "forStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetParameterListString",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "type_item_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "ret",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "params",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetPrototypeSignature",
    "parameters": Array [
      Object {
        "name": "item",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "proto_id_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "FieldIdItemRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "LongTypeIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "Type ID of the class that defines this field",
                  },
                ],
                "name": "class_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "LongTypeIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "Type ID for the type of this field",
                  },
                ],
                "name": "type_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "StringIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "String ID for the field's name",
                  },
                ],
                "name": "name_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "field_id_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "type",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "class",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "name",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "FieldIdItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "field_id_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "FieldIDListRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Field ID",
                  },
                ],
                "arraySelector": undefined,
                "name": "field_id",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "field_id_item",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "size",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "field_id_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "FieldIDListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "field_id_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "MethodIdItemRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "LongTypeIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "Type ID of the class that defines this method",
                  },
                ],
                "name": "class_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "ProtoIdxRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "Prototype ID for this method",
                  },
                ],
                "name": "proto_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "StringIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "String ID for the method's name",
                  },
                ],
                "name": "name_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "method_id_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ProtoIdxRead",
    "parameters": Array [
      Object {
        "name": "p",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "ushort",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "retval",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "classname",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "methodname",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "params",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "MethodIdItemRead",
    "parameters": Array [
      Object {
        "name": "m",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "method_id_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "MethodIDListRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Method ID",
                  },
                ],
                "arraySelector": undefined,
                "name": "method_id",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "method_id_item",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "size",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "method_id_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "MethodIDListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "method_id_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "FieldAnnotationRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "FieldIdRead",
                  },
                ],
                "name": "field_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "annotations_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "pos",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "int64",
                  },
                },
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "field_annotations",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotation_set_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "field_annotation",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "FieldAnnotationRead",
    "parameters": Array [
      Object {
        "name": "f",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "field_annotation",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "MethodAnnotationRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "MethodIdRead",
                  },
                ],
                "name": "method_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "annotations_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "pos",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "int64",
                  },
                },
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "method_annotations",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotation_set_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "method_annotation",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "MethodAnnotationRead",
    "parameters": Array [
      Object {
        "name": "m",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "method_annotation",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ParameterAnnotationRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "MethodIdRead",
                  },
                ],
                "name": "method_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "annotations_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "pos",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "int64",
                  },
                },
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "annotations_list",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotation_set_ref_list",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "parameter_annotation",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParameterAnnotationRead",
    "parameters": Array [
      Object {
        "name": "p",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "parameter_annotation",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "baseType": Object {
      "array": false,
      "name": "ubyte",
    },
    "declarations": Array [
      Object {
        "name": "VISIBILITY_BUILD",
        "value": undefined,
      },
      Object {
        "name": "VISIBILITY_RUNTIME",
        "value": undefined,
      },
      Object {
        "name": "VISIBILITY_SYSTEM",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "AnnotationItemRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Visibility of item",
                  },
                ],
                "name": "visibility",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "VISIBILITY",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Encoded annotation contents",
                  },
                ],
                "name": "annotation",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "encoded_annotation",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "annotation_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "AnnotationItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "annotation_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "AnnotationOffItemRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of this annotation entry",
                  },
                ],
                "name": "annotation_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "pos",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "int64",
                  },
                },
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Annotation item",
                        },
                      ],
                      "name": "item",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotation_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "annotation_off_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "AnnotationOffItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "annotation_off_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "AnnotationSetItemRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of entries in set",
                  },
                ],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Annotation entry elements",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "entries",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotation_off_item",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "annotation_set_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "AnnotationSetItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "annotation_set_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "AnnotationsDirectoryItemRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset to class annotations",
                  },
                ],
                "name": "class_annotations_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "pos",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "int64",
                  },
                },
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Class annotations",
                        },
                      ],
                      "name": "class_annotations",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotation_set_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of fields annotated by this item",
                  },
                ],
                "name": "fields_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of methods annotated by this item",
                  },
                ],
                "name": "methods_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of method parameter lists annotated by this item",
                  },
                ],
                "name": "parameters_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "List of field annotations",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "field_annotations",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "field_annotation",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "List of method annotations",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "method_annotations",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "method_annotation",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "List of method parameter annotations",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "parameter_annotations",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "parameter_annotation",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "annotations_directory_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "classes",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "AnnotationsDirectoryItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "annotations_directory_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of annotation",
                  },
                ],
                "name": "annotations_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "pos",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "int64",
                  },
                },
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Annotation set item",
                        },
                      ],
                      "name": "item",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotation_set_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "annotation_set_ref_item",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of entries in annotation list",
                  },
                ],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Annotation set elements",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "list",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotation_set_ref_item",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "annotation_set_ref_list",
    "type": "structDeclaration",
  },
  Object {
    "baseType": Object {
      "array": false,
      "name": "uint",
    },
    "declarations": Array [
      Object {
        "name": "ACC_PUBLIC",
        "value": undefined,
      },
      Object {
        "name": "ACC_PRIVATE",
        "value": undefined,
      },
      Object {
        "name": "ACC_PROTECTED",
        "value": undefined,
      },
      Object {
        "name": "ACC_STATIC",
        "value": undefined,
      },
      Object {
        "name": "ACC_FINAL",
        "value": undefined,
      },
      Object {
        "name": "ACC_SYNCHRONIZED",
        "value": undefined,
      },
      Object {
        "name": "ACC_VOLATILE",
        "value": undefined,
      },
      Object {
        "name": "ACC_TRANSIENT",
        "value": undefined,
      },
      Object {
        "name": "ACC_NATIVE",
        "value": undefined,
      },
      Object {
        "name": "ACC_INTERFACE",
        "value": undefined,
      },
      Object {
        "name": "ACC_ABSTRACT",
        "value": undefined,
      },
      Object {
        "name": "ACC_STRICT",
        "value": undefined,
      },
      Object {
        "name": "ACC_SYNTHETIC",
        "value": undefined,
      },
      Object {
        "name": "ACC_ANNOTATION",
        "value": undefined,
      },
      Object {
        "name": "ACC_ENUM",
        "value": undefined,
      },
      Object {
        "name": "ACC_CONSTRUCTOR",
        "value": undefined,
      },
      Object {
        "name": "ACC_DECLARED_SYNCHRONIZED",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "ret",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "flags",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "ACCESS_FLAGS",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    undefined,
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
              undefined,
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "type": "whileStatement",
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "AccessFlagsRead",
    "parameters": Array [
      Object {
        "name": "f",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "ACCESS_FLAGS",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "AccessFlagsReadUleb",
    "parameters": Array [
      Object {
        "name": "f",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "uleb128",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "declarations": Array [
      Object {
        "name": "AF_CLASS",
      },
      Object {
        "name": "AF_FIELD",
      },
      Object {
        "name": "AF_METHOD",
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "statements": Array [
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_PUBLIC",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_PRIVATE",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_PROTECTED",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_STATIC",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_FINAL",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_SYNCHRONIZED",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "condition": undefined,
                    "falseStatement": undefined,
                    "trueStatement": Object {
                      "assignmentExpression": undefined,
                      "type": "returnStatement",
                    },
                    "type": "ifStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_VOLATILE",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "condition": undefined,
                    "falseStatement": undefined,
                    "trueStatement": Object {
                      "assignmentExpression": undefined,
                      "type": "returnStatement",
                    },
                    "type": "ifStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_TRANSIENT",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_NATIVE",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_INTERFACE",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_ABSTRACT",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_STRICT",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_SYNTHETIC",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_ANNOTATION",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_ENUM",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_CONSTRUCTOR",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "assignmentExpression": undefined,
                    "type": "returnStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                "ACC_DECLARED_SYNCHRONIZED",
              ],
            },
            Object {
              "body": Object {
                "statements": Array [],
                "type": "statementList",
              },
              "labels": Array [],
            },
          ],
          "type": "switchStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetFriendlyAccessFlag",
    "parameters": Array [
      Object {
        "name": "flag",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
      Object {
        "name": "type",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "AF_TYPE",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "flags",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "ACCESS_FLAGS",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    undefined,
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
              undefined,
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "type": "whileStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetFriendlyAccessFlags",
    "parameters": Array [
      Object {
        "name": "f",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "ACCESS_FLAGS",
        },
      },
      Object {
        "name": "type",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "AF_TYPE",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedFieldRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "p",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Field ID for this field, represented as the difference from the previous index",
                  },
                ],
                "name": "field_idx_diff",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "AccessFlagsReadUleb",
                  },
                  Object {
                    "key": "comment",
                    "value": "Access flags",
                  },
                ],
                "name": "access_flags",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "previd",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "encoded_field",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "realid",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedFieldRead",
    "parameters": Array [
      Object {
        "name": "f",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_field",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedFieldListRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "i",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "fieldid",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "body": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Encoded field",
                        },
                      ],
                      "arguments": Array [
                        undefined,
                      ],
                      "name": "field",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "encoded_field",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "condition": undefined,
            "increment": undefined,
            "initialization": undefined,
            "type": "forStatement",
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "size",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "encoded_field_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedFieldListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_field_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedMethodRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "p",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Method ID for this method, represented as the difference from the previous index",
                  },
                ],
                "name": "method_idx_diff",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "AccessFlagsReadUleb",
                  },
                  Object {
                    "key": "comment",
                    "value": "Access flags",
                  },
                ],
                "name": "access_flags",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset to the code for this method",
                  },
                ],
                "name": "code_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "pos",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "int64",
                  },
                },
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Code structure for this method",
                        },
                      ],
                      "name": "code",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "code_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "previd",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "encoded_method",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "realid",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedMethodRead",
    "parameters": Array [
      Object {
        "name": "m",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_method",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedMethodListRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "i",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "methodid",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "body": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Encoded method",
                        },
                      ],
                      "arguments": Array [
                        undefined,
                      ],
                      "name": "method",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "encoded_method",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "condition": undefined,
            "increment": undefined,
            "initialization": undefined,
            "type": "forStatement",
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "size",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "encoded_method_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedMethodListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_method_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ClassDataItemRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "The number of static fields",
                  },
                ],
                "name": "static_fields_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "The number of instance fields",
                  },
                ],
                "name": "instance_fields_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "The number of direct methods",
                  },
                ],
                "name": "direct_methods_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "The number of virtual methods",
                  },
                ],
                "name": "virtual_methods_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Encoded sequence of static fields",
                        },
                      ],
                      "arguments": Array [
                        undefined,
                      ],
                      "name": "static_fields",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "encoded_field_list",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Encoded sequence of instance fields",
                        },
                      ],
                      "arguments": Array [
                        undefined,
                      ],
                      "name": "instance_fields",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "encoded_field_list",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Encoded sequence of direct methods",
                        },
                      ],
                      "arguments": Array [
                        undefined,
                      ],
                      "name": "direct_methods",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "encoded_method_list",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Encoded sequence of virtual methods",
                        },
                      ],
                      "arguments": Array [
                        undefined,
                      ],
                      "name": "virtual_methods",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "encoded_method_list",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "class_data_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ClassDataItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "class_data_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ClassDefItemRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "pos",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int64",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "LongTypeIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "Type ID for this class",
                  },
                ],
                "name": "class_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Access flags",
                  },
                ],
                "name": "access_flags",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ACCESS_FLAGS",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "LongTypeIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "Type ID for this class's superclass",
                  },
                ],
                "name": "superclass_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset to interface list",
                  },
                ],
                "name": "interfaces_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                undefined,
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "read",
                          "value": "InterfacesRead",
                        },
                        Object {
                          "key": "comment",
                          "value": "Interface data",
                        },
                      ],
                      "name": "interfaces",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "type_item_list",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "StringIdRead",
                  },
                  Object {
                    "key": "comment",
                    "value": "String ID for the name of the file with this class defined",
                  },
                ],
                "name": "source_file_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset to the annotation structure for this class",
                  },
                ],
                "name": "annotations_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                undefined,
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Annotation data",
                        },
                      ],
                      "name": "annotations",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "annotations_directory_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset to the class data for this class",
                  },
                ],
                "name": "class_data_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                undefined,
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Class data",
                        },
                      ],
                      "name": "class_data",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "class_data_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset to static field data",
                  },
                ],
                "name": "static_values_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                undefined,
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Static values",
                        },
                      ],
                      "name": "static_values",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "encoded_array_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "class_def_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "classname",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "flags",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ClassDefItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "class_def_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              undefined,
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    undefined,
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "increment": undefined,
          "initialization": undefined,
          "type": "forStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "InterfacesRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "type_item_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ClassDefItemListRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Class ID",
                  },
                ],
                "arraySelector": undefined,
                "name": "class_def",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "class_def_item",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "size",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "class_def_item_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ClassDefItemListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "class_def_item_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Start address of code block covered by this entry, in 16-bit code units from the start of the first instruction",
                  },
                ],
                "name": "start_addr",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of 16-bit code units covered by this entry",
                  },
                ],
                "name": "insn_count",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Offset to the catch_handler_item for this entry",
                  },
                ],
                "name": "handler_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "try_item",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedCatchHandlerRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of catch types in the list",
                  },
                ],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "sleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "s",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "numhandlers",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Exception handler pairs",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "handlers",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "encoded_type_addr_pair",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Address of catch-all handler",
                        },
                      ],
                      "name": "catch_all_addr",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "uleb128",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "encoded_catch_handler",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedCatchHandlerRead",
    "parameters": Array [
      Object {
        "name": "h",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_catch_handler",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedCatchHandlerListRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of handler lists",
                  },
                ],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "List of handler lists",
                  },
                ],
                "arraySelector": undefined,
                "name": "list",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "encoded_catch_handler",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "encoded_catch_handler_list",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedCatchHandlerListRead",
    "parameters": Array [
      Object {
        "name": "l",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_catch_handler_list",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "CodeItemRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of registers used by this code",
                  },
                ],
                "name": "registers_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of words of incoming arguments for this code's method",
                  },
                ],
                "name": "ins_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of words of outgoing arguments for this code's method",
                  },
                ],
                "name": "outs_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of try_item entries for this code",
                  },
                ],
                "name": "tries_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset for the debug information",
                  },
                ],
                "name": "debug_info_off",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "pos",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "int64",
                  },
                },
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Debug information for this method",
                        },
                      ],
                      "name": "debug_info",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "debug_info_item",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of instruction list, in 16-bit code units",
                  },
                ],
                "name": "insns_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Instruction",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "insns",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "ushort",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "condition": undefined,
                  "trueStatement": Object {
                    "statements": Array [
                      Object {
                        "annotations": Array [],
                        "declarations": Array [
                          Object {
                            "annotations": Array [
                              Object {
                                "key": "comment",
                                "value": "Padding...",
                              },
                            ],
                            "name": "padding",
                          },
                        ],
                        "type": "variableDeclaration",
                        "variableType": Object {
                          "array": false,
                          "name": "ushort",
                        },
                      },
                    ],
                    "type": "statementList",
                  },
                  "type": "ifStatement",
                },
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Array of code try block addresses",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "tries",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "try_item",
                  },
                },
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Array of catch types and handler addresses",
                        },
                      ],
                      "name": "handlers",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "encoded_catch_handler_list",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "code_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CodeItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "code_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedTypeAddrPairRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "read",
                    "value": "LongTypeIdReadUleb",
                  },
                  Object {
                    "key": "comment",
                    "value": "Type ID for the type of exception to catch",
                  },
                ],
                "name": "type_idx",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Bytecode address of exception handler",
                  },
                ],
                "name": "addr",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "encoded_type_addr_pair",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedTypeAddrPairRead",
    "parameters": Array [
      Object {
        "name": "p",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_type_addr_pair",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "EncodedArrayItemRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "The encoded array value",
                  },
                ],
                "name": "value",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "encoded_array",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "encoded_array_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "EncodedArrayItemRead",
    "parameters": Array [
      Object {
        "name": "i",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "encoded_array_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "alias": "TYPE_CODES",
    "baseType": Object {
      "array": false,
      "name": "ushort",
    },
    "declarations": Array [
      Object {
        "name": "TYPE_HEADER_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_STRING_ID_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_TYPE_ID_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_PROTO_ID_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_FIELD_ID_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_METHOD_ID_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_CLASS_DEF_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_MAP_LIST",
        "value": undefined,
      },
      Object {
        "name": "TYPE_TYPE_LIST",
        "value": undefined,
      },
      Object {
        "name": "TYPE_ANNOTATION_SET_REF_LIST",
        "value": undefined,
      },
      Object {
        "name": "TYPE_ANNOTATION_SET_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_CLASS_DATA_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_CODE_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_STRING_DATA_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_DEBUG_INFO_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_ANNOTATION_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_ENCODED_ARRAY_ITEM",
        "value": undefined,
      },
      Object {
        "name": "TYPE_ANNOTATIONS_DIRECTORY_ITEM",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "baseType": Object {
      "array": false,
      "name": "ubyte",
    },
    "declarations": Array [
      Object {
        "name": "DBG_END_SEQUENCE",
        "value": undefined,
      },
      Object {
        "name": "DBG_ADVANCE_PC",
        "value": undefined,
      },
      Object {
        "name": "DBG_ADVANCE_LINE",
        "value": undefined,
      },
      Object {
        "name": "DBG_START_LOCAL",
        "value": undefined,
      },
      Object {
        "name": "DBG_START_LOCAL_EXTENDED",
        "value": undefined,
      },
      Object {
        "name": "DBG_END_LOCAL",
        "value": undefined,
      },
      Object {
        "name": "DBG_RESTART_LOCAL",
        "value": undefined,
      },
      Object {
        "name": "DBG_SET_PROLOGUE_END",
        "value": undefined,
      },
      Object {
        "name": "DBG_SET_EPILOGUE_BEGIN",
        "value": undefined,
      },
      Object {
        "name": "DBG_SET_FILE",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "DebugOpcodeRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Debug opcode",
                  },
                ],
                "name": "opcode",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DBG_OPCODE",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "args",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string",
            },
          },
          Object {
            "statements": Array [
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "DBG_END_SEQUENCE",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Amount to add to address register",
                            },
                          ],
                          "name": "addr_diff",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128",
                      },
                    },
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "DBG_ADVANCE_PC",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Amount to change line register by",
                            },
                          ],
                          "name": "line_diff",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "sleb128",
                      },
                    },
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "DBG_ADVANCE_LINE",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Register that will contain local",
                            },
                          ],
                          "name": "register_num",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128",
                      },
                    },
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "read",
                              "value": "StringIdReadUlebp1",
                            },
                            Object {
                              "key": "comment",
                              "value": "String index of name",
                            },
                          ],
                          "name": "name_idx",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128p1",
                      },
                    },
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "read",
                              "value": "LongTypeIdReadUlebp1",
                            },
                            Object {
                              "key": "comment",
                              "value": "Type index of type",
                            },
                          ],
                          "name": "type_idx",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128p1",
                      },
                    },
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "DBG_START_LOCAL",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Register that will contain local",
                            },
                          ],
                          "name": "register_num",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128",
                      },
                    },
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "read",
                              "value": "StringIdReadUlebp1",
                            },
                            Object {
                              "key": "comment",
                              "value": "String index of name",
                            },
                          ],
                          "name": "name_idx",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128p1",
                      },
                    },
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "read",
                              "value": "LongTypeIdReadUlebp1",
                            },
                            Object {
                              "key": "comment",
                              "value": "Type index of type",
                            },
                          ],
                          "name": "type_idx",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128p1",
                      },
                    },
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "read",
                              "value": "StringIdReadUlebp1",
                            },
                            Object {
                              "key": "comment",
                              "value": "String index of type signature",
                            },
                          ],
                          "name": "sig_idx",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128p1",
                      },
                    },
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "DBG_START_LOCAL_EXTENDED",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Register that contained local",
                            },
                          ],
                          "name": "register_num",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128",
                      },
                    },
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "DBG_END_LOCAL",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "comment",
                              "value": "Register to restart",
                            },
                          ],
                          "name": "register_num",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128",
                      },
                    },
                    undefined,
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "DBG_RESTART_LOCAL",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "type": "breakStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "DBG_SET_PROLOGUE_END",
                  "DBG_SET_EPILOGUE_BEGIN",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [
                            Object {
                              "key": "read",
                              "value": "StringIdReadUlebp1",
                            },
                            Object {
                              "key": "comment",
                              "value": "String index of source file name",
                            },
                          ],
                          "name": "name_idx",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "uleb128p1",
                      },
                    },
                    undefined,
                  ],
                  "type": "statementList",
                },
                "labels": Array [
                  "DBG_SET_FILE",
                ],
              },
              Object {
                "body": Object {
                  "statements": Array [],
                  "type": "statementList",
                },
                "labels": Array [],
              },
            ],
            "type": "switchStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "debug_opcode",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [],
                    "name": "adjusted",
                  },
                ],
                "local": true,
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "ubyte",
                },
              },
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "DebugOpcodeRead",
    "parameters": Array [
      Object {
        "name": "opcode",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "debug_opcode",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Initial value for state machine 'line' register",
                  },
                ],
                "name": "line_start",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of encoded parameter names",
                  },
                ],
                "name": "parameters_size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uleb128",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "String ID of method parameter names",
                        },
                        Object {
                          "key": "optimize",
                          "value": "false",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "parameter_names",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "uleb128p1",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "body": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "A debug opcode",
                        },
                      ],
                      "name": "opcode",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "debug_opcode",
                  },
                },
              ],
              "type": "statementList",
            },
            "condition": undefined,
            "type": "doWhileStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "debug_info_item",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "MapItemRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "type",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "TYPE_CODES",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "unused",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ushort",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "offset",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "map_item",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "MapItemRead",
    "parameters": Array [
      Object {
        "name": "m",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "map_item",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "MapListTypeRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "arraySelector": undefined,
                "name": "list",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "map_item",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "map_list_type",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "MapListTypeRead",
    "parameters": Array [
      Object {
        "name": "t",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "map_list_type",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "StringIdRead",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "StringIdReadUleb",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "uleb128",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "StringIdReadUlebp1",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "uleb128p1",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "TypeIdRead",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "LongTypeIdRead",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "LongTypeIdReadUleb",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "uleb128",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "LongTypeIdReadUlebp1",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "uleb128p1",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "FieldIdRead",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "MethodIdRead",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetIdAndNameString",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
      Object {
        "name": "name",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "string",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetStringById",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetTypeById",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetLongTypeById",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetMethodById",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetFieldById",
    "parameters": Array [
      Object {
        "name": "id",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "int",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "baseType": Object {
      "array": false,
      "name": "uint",
    },
    "declarations": Array [
      Object {
        "name": "DEX_CHUNK_CLASS_LOOKUP",
        "value": undefined,
      },
      Object {
        "name": "DEX_CHUNK_REGISTER_MAPS",
        "value": undefined,
      },
      Object {
        "name": "DEX_CHUNK_END",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "DexOptChunkRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Chunk type",
                  },
                ],
                "name": "type",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DEX_CHUNK_TYPE",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of chunk, in bytes",
                  },
                ],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "realsize",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "condition": undefined,
            "falseStatement": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "DexOpt class lookup hash table",
                        },
                      ],
                      "name": "class_lookup_table",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "dex_class_lookup",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "dexopt_opt_chunk",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "DexoptOptTableRead",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "count",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "body": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "chunk",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "dexopt_opt_chunk",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "condition": undefined,
            "type": "doWhileStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "dexopt_opt_table",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "DexoptOptTableRead",
    "parameters": Array [
      Object {
        "name": "t",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "dexopt_opt_table",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "DexOptChunkRead",
    "parameters": Array [
      Object {
        "name": "c",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "dexopt_opt_chunk",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "DexClassLookupEntryRead",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Class descriptor hash code",
                  },
                ],
                "name": "class_descriptor_hash",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "uint",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of class descriptor",
                  },
                ],
                "name": "class_descriptor_offset",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File offset of class definition",
                  },
                ],
                "name": "class_definition_offset",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "dex_class_lookup_entry",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "s",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "DexClassLookupEntryRead",
    "parameters": Array [
      Object {
        "name": "e",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "dex_class_lookup_entry",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of dex_class_lookup structure",
                  },
                ],
                "name": "size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Number of entries in class lookup hashtable",
                  },
                ],
                "name": "num_entries",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Class lookup table",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "table",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "dex_class_lookup_entry",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "dex_class_lookup",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [],
        "name": "odex",
      },
    ],
    "local": true,
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "int",
    },
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [],
        "arraySelector": undefined,
        "name": "tmp",
      },
    ],
    "local": true,
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "char",
    },
  },
  undefined,
  undefined,
  Object {
    "condition": undefined,
    "trueStatement": Object {
      "statements": Array [
        undefined,
      ],
      "type": "statementList",
    },
    "type": "ifStatement",
  },
  Object {
    "condition": undefined,
    "trueStatement": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [
                Object {
                  "key": "comment",
                  "value": "DexOpt file header",
                },
              ],
              "name": "dexopt_header",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "dexopt_header_item",
          },
        },
        undefined,
        undefined,
      ],
      "type": "statementList",
    },
    "type": "ifStatement",
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "comment",
            "value": "Dex file header",
          },
        ],
        "name": "dex_header",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "header_item",
    },
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "comment",
            "value": "String ID list",
          },
        ],
        "arguments": Array [
          undefined,
        ],
        "name": "dex_string_ids",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "string_id_list",
    },
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "comment",
            "value": "Type ID list",
          },
        ],
        "arguments": Array [
          undefined,
        ],
        "name": "dex_type_ids",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "type_id_list",
    },
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "comment",
            "value": "Method prototype ID list",
          },
        ],
        "arguments": Array [
          undefined,
        ],
        "name": "dex_proto_ids",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "proto_id_list",
    },
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "comment",
            "value": "Field ID list",
          },
        ],
        "arguments": Array [
          undefined,
        ],
        "name": "dex_field_ids",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "field_id_list",
    },
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "comment",
            "value": "Method ID list",
          },
        ],
        "arguments": Array [
          undefined,
        ],
        "name": "dex_method_ids",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "method_id_list",
    },
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "comment",
            "value": "Class definitions list",
          },
        ],
        "arguments": Array [
          undefined,
        ],
        "name": "dex_class_defs",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "class_def_item_list",
    },
  },
  Object {
    "condition": undefined,
    "trueStatement": Object {
      "statements": Array [
        undefined,
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [
                Object {
                  "key": "comment",
                  "value": "Map list",
                },
              ],
              "name": "dex_map_list",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "map_list_type",
          },
        },
      ],
      "type": "statementList",
    },
    "type": "ifStatement",
  },
  Object {
    "condition": undefined,
    "trueStatement": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [
                      Object {
                        "key": "comment",
                        "value": "DexOpt dependency table",
                      },
                    ],
                    "arraySelector": undefined,
                    "name": "dexopt_deps",
                  },
                ],
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "ubyte",
                },
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [
                      Object {
                        "key": "comment",
                        "value": "DexOpt OPT tabls",
                      },
                    ],
                    "name": "opt_table",
                  },
                ],
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "dexopt_opt_table",
                },
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "type": "ifStatement",
  },
]
`;

exports[`Sweetscape Importer creates EXE definition 1`] = `
Array [
  Object {
    "alias": "ULONGLONG",
    "annotations": Array [],
    "name": Object {
      "array": false,
      "name": "QWORD",
    },
    "type": "typeAlias",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "IMAGE_DOS_SIGNATURE = 0x5A4D",
                  },
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "MZSignature",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Bytes on last page of file",
                  },
                ],
                "name": "UsedBytesInTheLastPage",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Pages in file",
                  },
                ],
                "name": "FileSizeInPages",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Relocations",
                  },
                ],
                "name": "NumberOfRelocationItems",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Size of header in paragraphs",
                  },
                ],
                "name": "HeaderSizeInParagraphs",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Minimum extra paragraphs needed",
                  },
                ],
                "name": "MinimumExtraParagraphs",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Maximum extra paragraphs needed",
                  },
                ],
                "name": "MaximumExtraParagraphs",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Initial (relative) SS value",
                  },
                ],
                "name": "InitialRelativeSS",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Initial SP value",
                  },
                ],
                "name": "InitialSP",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Checksum",
                  },
                ],
                "name": "Checksum",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Initial IP value",
                  },
                ],
                "name": "InitialIP",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Initial (relative) CS value",
                  },
                ],
                "name": "InitialRelativeCS",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "File address of relocation table",
                  },
                ],
                "name": "AddressOfRelocationTable",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Overlay number",
                  },
                ],
                "name": "OverlayNumber",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Reserved words",
                  },
                ],
                "arraySelector": undefined,
                "name": "Reserved",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "OEM identifier (for OEMinfo)",
                  },
                ],
                "name": "OEMid",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "OEM information; OEMid specific",
                  },
                ],
                "name": "OEMinfo",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Reserved words",
                  },
                ],
                "arraySelector": undefined,
                "name": "Reserved2",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "NtHeader Offset",
                  },
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "AddressOfNewExeHeader",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "LONG",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_DOS_HEADER",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "Space between DOS header and NT header",
                        },
                      ],
                      "arraySelector": undefined,
                      "name": "Data",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "UCHAR",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          undefined,
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_DOS_STUB",
    "type": "structDeclaration",
  },
  Object {
    "baseType": Object {
      "array": false,
      "name": "WORD",
    },
    "declarations": Array [
      Object {
        "name": "IMAGE_MACHINE_UNKNOWN",
        "value": undefined,
      },
      Object {
        "name": "I386",
        "value": undefined,
      },
      Object {
        "name": "R3000",
        "value": undefined,
      },
      Object {
        "name": "R4000",
        "value": undefined,
      },
      Object {
        "name": "R10000",
        "value": undefined,
      },
      Object {
        "name": "WCEMIPSV2",
        "value": undefined,
      },
      Object {
        "name": "ALPHA",
        "value": undefined,
      },
      Object {
        "name": "SH3",
        "value": undefined,
      },
      Object {
        "name": "SH3DSP",
        "value": undefined,
      },
      Object {
        "name": "SH3E",
        "value": undefined,
      },
      Object {
        "name": "SH4",
        "value": undefined,
      },
      Object {
        "name": "SH5",
        "value": undefined,
      },
      Object {
        "name": "ARM",
        "value": undefined,
      },
      Object {
        "name": "THUMB",
        "value": undefined,
      },
      Object {
        "name": "AM33",
        "value": undefined,
      },
      Object {
        "name": "POWERPC",
        "value": undefined,
      },
      Object {
        "name": "POWERPCFP",
        "value": undefined,
      },
      Object {
        "name": "IA64",
        "value": undefined,
      },
      Object {
        "name": "MIPS16",
        "value": undefined,
      },
      Object {
        "name": "ALPHA64",
        "value": undefined,
      },
      Object {
        "name": "MIPSFPU",
        "value": undefined,
      },
      Object {
        "name": "MIPSFPU16",
        "value": undefined,
      },
      Object {
        "name": "TRICORE",
        "value": undefined,
      },
      Object {
        "name": "CEF",
        "value": undefined,
      },
      Object {
        "name": "EBC",
        "value": undefined,
      },
      Object {
        "name": "AMD64",
        "value": undefined,
      },
      Object {
        "name": "M32R",
        "value": undefined,
      },
      Object {
        "name": "CEE",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "comment",
        "value": "WORD",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0001  Relocation info stripped from file",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_RELOCS_STRIPPED",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0002  File is executable",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_EXECUTABLE_IMAGE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0004  Line nunbers stripped from file",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_LINE_NUMS_STRIPPED",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0008  Local symbols stripped from file",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_LOCAL_SYMS_STRIPPED",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0010  Agressively trim working set",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_AGGRESIVE_WS_TRIM",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0020  App can handle >2gb addresses",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_LARGE_ADDRESS_AWARE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [
              Object {
                "key": "comment",
                "value": "0x0040  Reserved",
              },
              Object {
                "key": "hidden",
                "value": "true",
              },
            ],
            "bits": undefined,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0080  Bytes of machine word are reversed",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_BYTES_REVERSED_LO",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0100  32 bit word machine",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_32BIT_MACHINE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0200  Debugging info stripped from file in .DBG file",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_DEBUG_STRIPPED",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0400  If Image is on removable media, copy and run from the swap file",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0800  If Image is on Net, copy and run from the swap file",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_NET_RUN_FROM_SWAP",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x1000  System File",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_SYSTEM",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x2000  File is a DLL",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_DLL",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x4000  File should only be run on a UP machine",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_UP_SYSTEM_ONLY",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x8000  Bytes of machine word are reversed",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_FILE_BYTES_REVERSED_HI",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "FILE_CHARACTERISTICS",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "fgcolor",
                    "value": "cPurple",
                  },
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "WORD",
                  },
                ],
                "name": "Machine",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "IMAGE_MACHINE",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "fgcolor",
                    "value": "cBlue",
                  },
                  Object {
                    "key": "comment",
                    "value": "Section num",
                  },
                ],
                "name": "NumberOfSections",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "DWORD,from 01/01/1970 12:00 AM",
                  },
                ],
                "name": "TimeDateStamp",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "time_t",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "PointerToSymbolTable",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "NumberOfSymbols",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "SizeOfOptionalHeader",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "WORD",
                  },
                ],
                "name": "Characteristics",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "FILE_CHARACTERISTICS",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_FILE_HEADER",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                ],
                "name": "VirtualAddress",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Size",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_DATA_DIRECTORY",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "len",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_EXPORT",
                    },
                  ],
                  "name": "Export",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_IMPORT",
                    },
                    Object {
                      "key": "fgcolor",
                      "value": "cPurple",
                    },
                  ],
                  "name": "Import",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_RESOURCE",
                    },
                  ],
                  "name": "Resource",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_EXCEPTION",
                    },
                  ],
                  "name": "Exception",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_SECURITY",
                    },
                  ],
                  "name": "Security",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_BASERELOC",
                    },
                    Object {
                      "key": "fgcolor",
                      "value": "cPurple",
                    },
                  ],
                  "name": "BaseRelocationTable",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_DEBUG",
                    },
                  ],
                  "name": "DebugDirectory",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_ARCHITECTURE",
                    },
                  ],
                  "name": "CopyrightOrArchitectureSpecificData",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_GLOBALPTR",
                    },
                  ],
                  "name": "GlobalPtr",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_TLS",
                    },
                  ],
                  "name": "TLSDirectory",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG",
                    },
                  ],
                  "name": "LoadConfigurationDirectory",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT",
                    },
                  ],
                  "name": "BoundImportDirectory",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_IAT",
                    },
                    Object {
                      "key": "fgcolor",
                      "value": "cPurple",
                    },
                  ],
                  "name": "ImportAddressTable",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT",
                    },
                  ],
                  "name": "DelayLoadImportDescriptors",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR",
                    },
                  ],
                  "name": "COMRuntimedescriptor",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "annotations": Array [],
              "declarations": Array [
                Object {
                  "annotations": Array [
                    Object {
                      "key": "comment",
                      "value": "System Reserved",
                    },
                  ],
                  "name": "Reserved",
                },
              ],
              "type": "variableDeclaration",
              "variableType": Object {
                "array": false,
                "name": "IMAGE_DATA_DIRECTORY",
              },
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_DATA_DIRECTORY_ARRAY",
    "type": "structDeclaration",
  },
  Object {
    "baseType": Object {
      "array": false,
      "name": "WORD",
    },
    "declarations": Array [
      Object {
        "name": "IMAGE_SUBSYSTEM_UNKNOWN",
        "value": undefined,
      },
      Object {
        "name": "NATIVE",
        "value": undefined,
      },
      Object {
        "name": "WINDOWS_GUI",
        "value": undefined,
      },
      Object {
        "name": "WINDOWS_CUI",
        "value": undefined,
      },
      Object {
        "name": "OS2_CUI",
        "value": undefined,
      },
      Object {
        "name": "POSIX_CUI",
        "value": undefined,
      },
      Object {
        "name": "NATIVE_WINDOWS",
        "value": undefined,
      },
      Object {
        "name": "WINDOWS_CE_GUI",
        "value": undefined,
      },
      Object {
        "name": "EFI_APPLICATION",
        "value": undefined,
      },
      Object {
        "name": "EFI_BOOT_SERVICE_DRIVER",
        "value": undefined,
      },
      Object {
        "name": "EFI_RUNTIME_DRIVER",
        "value": undefined,
      },
      Object {
        "name": "EFI_ROM",
        "value": undefined,
      },
      Object {
        "name": "XBOX",
        "value": undefined,
      },
      Object {
        "name": "WINDOWS_BOOT_APPLICATION",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "comment",
        "value": "WORD",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0001 Reserved",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_LIBRARY_PROCESS_INIT",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0002 Reserved",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_LIBRARY_PROCESS_TERM",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0004 Reserved",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_LIBRARY_THREAD_INIT",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0008 Reserved",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_LIBRARY_THREAD_TERM",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [
              Object {
                "key": "comment",
                "value": "0x0010,0x0020",
              },
              Object {
                "key": "hidden",
                "value": "true",
              },
            ],
            "bits": undefined,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0040",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0080",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0100",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_DLLCHARACTERISTICS_NX_COMPAT",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0200",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_DLLCHARACTERISTICS_NO_ISOLATION",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0400",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_DLLCHARACTERISTICS_NO_SEH",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x0800",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_DLLCHARACTERISTICS_NO_BIND",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [
              Object {
                "key": "comment",
                "value": "0x1000",
              },
              Object {
                "key": "hidden",
                "value": "true",
              },
            ],
            "bits": undefined,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x2000",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_DLLCHARACTERISTICS_WDM_DRIVER",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [
              Object {
                "key": "comment",
                "value": "0x4000",
              },
              Object {
                "key": "hidden",
                "value": "true",
              },
            ],
            "bits": undefined,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x8000",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "DLL_CHARACTERISTICS",
    "type": "structDeclaration",
  },
  Object {
    "baseType": Object {
      "array": false,
      "name": "WORD",
    },
    "declarations": Array [
      Object {
        "name": "PE32",
        "value": undefined,
      },
      Object {
        "name": "PE64",
        "value": undefined,
      },
      Object {
        "name": "ROM",
        "value": undefined,
      },
    ],
    "type": "enumDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "Magic",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "OPTIONAL_MAGIC",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MajorLinkerVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "BYTE",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MinorLinkerVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "BYTE",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfCode",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "SizeOfInitializedData",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "SizeOfUninitializedData",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                  Object {
                    "key": "fgcolor",
                    "value": "cPurple",
                  },
                ],
                "name": "AddressOfEntryPoint",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                ],
                "name": "BaseOfCode",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                ],
                "name": "BaseOfData",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "ImageBase",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SectionAlignment",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "FileAlignment",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MajorOperatingSystemVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MinorOperatingSystemVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MajorImageVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MinorImageVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MajorSubsystemVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MinorSubsystemVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Win32VersionValue",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfImage",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfHeaders",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "CheckSum",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Subsystem",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "IMAGE_SUBSYSTEM",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "DllCharacteristics",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DLL_CHARACTERISTICS",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfStackReserve",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfStackCommit",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfHeapReserve",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfHeapCommit",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "LoaderFlags",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "NumberOfRvaAndSizes",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "DataDirArray",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "IMAGE_DATA_DIRECTORY_ARRAY",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_OPTIONAL_HEADER32",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "Magic",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "OPTIONAL_MAGIC",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MajorLinkerVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "BYTE",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MinorLinkerVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "BYTE",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "SizeOfCode",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "SizeOfInitializedData",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "SizeOfUninitializedData",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                ],
                "name": "AddressOfEntryPoint",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "BaseOfCode",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "ImageBase",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONGLONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "SectionAlignment",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "FileAlignment",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MajorOperatingSystemVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MinorOperatingSystemVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MajorImageVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MinorImageVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MajorSubsystemVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MinorSubsystemVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Win32VersionValue",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfImage",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "SizeOfHeaders",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "CheckSum",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Subsystem",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "IMAGE_SUBSYSTEM",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "DllCharacteristics",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DLL_CHARACTERISTICS",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfStackReserve",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONGLONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfStackCommit",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONGLONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfHeapReserve",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONGLONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfHeapCommit",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONGLONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "LoaderFlags",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "NumberOfRvaAndSizes",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "DataDirArray",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "IMAGE_DATA_DIRECTORY_ARRAY",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_OPTIONAL_HEADER64",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "size",
        "value": "CalcImageNtHeadersSize",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "IMAGE_NT_SIGNATURE = 0x00004550",
                  },
                ],
                "name": "Signature",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "FileHeader",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "IMAGE_FILE_HEADER",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "OptionalHeaderMagic",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "condition": undefined,
            "falseStatement": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "OptionalHeader",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "IMAGE_OPTIONAL_HEADER32",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_NT_HEADERS",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000001 Reserved",
                  },
                  Object {
                    "key": "hidden",
                    "value": "true",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_TYPE_DSECT",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000002 Reserved",
                  },
                  Object {
                    "key": "hidden",
                    "value": "true",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_TYPE_NOLOAD",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000004 Reserved",
                  },
                  Object {
                    "key": "hidden",
                    "value": "true",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_TYPE_GROUP",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000008 Reserved",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_TYPE_NO_PAD",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000010 Reserved",
                  },
                  Object {
                    "key": "hidden",
                    "value": "true",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_TYPE_COPY",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000020 Section contains code",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_CNT_CODE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000040 Section contains initialized data",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_CNT_INITIALIZED_DATA",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000080 Section contains uninitialized data",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_CNT_UNINITIALIZED_DATA",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000100 Reserved",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_LNK_OTHER",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000200 Section contains comments or some other type of information",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_LNK_INFO",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000400 Reserved",
                  },
                  Object {
                    "key": "hidden",
                    "value": "true",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_TYPE_OVER",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00000800 Section contents will not become part of image",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_LNK_REMOVE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00001000 Section contents comdat",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_LNK_COMDAT",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [
              Object {
                "key": "comment",
                "value": "0x00002000 Reserved",
              },
            ],
            "bits": undefined,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00004000 Reset speculative exceptions handling bits in the TLB entries for this section.",
                  },
                  Object {
                    "key": "hidden",
                    "value": "true",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_NO_DEFER_SPEC_EXC",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00008000 Section content can be accessed relative to GP",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_GPREL",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00010000 Obsolete",
                  },
                  Object {
                    "key": "hidden",
                    "value": "true",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_SYSHEAP",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00020000",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_16BIT",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00040000 ",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_LOCKED",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00080000",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_PRELOAD",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00100000",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_ALIGN_1BYTES",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00200000",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_ALIGN_2BYTES",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00400000",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_ALIGN_8BYTES",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x00800000",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_ALIGN_128BYTES",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x01000000 Section contains extended relocations",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_LNK_NRELOC_OVFL",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x02000000 Section can be discarded.",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_DISCARDABLE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x04000000 Section is not cachable",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_NOT_CACHED",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x08000000 Section is not pageable.",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_NOT_PAGED",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x10000000 Section is shareable",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_SHARED",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x20000000 Section is executable",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_EXECUTE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x40000000 Section is readable",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_READ",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0x80000000 Section is writeable",
                  },
                ],
                "bits": undefined,
                "name": "IMAGE_SCN_MEM_WRITE",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "SECTION_CHARACTERISTICS",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ReadImageSectionHeader",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "can end without zero",
                  },
                ],
                "arraySelector": undefined,
                "name": "Name",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "BYTE",
            },
          },
          Object {
            "annotations": Array [],
            "declaration": Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "annotations": Array [],
                    "declarations": Array [
                      Object {
                        "annotations": Array [],
                        "name": "PhysicalAddress",
                      },
                    ],
                    "type": "variableDeclaration",
                    "variableType": Object {
                      "array": false,
                      "name": "DWORD",
                    },
                  },
                  Object {
                    "annotations": Array [],
                    "declarations": Array [
                      Object {
                        "annotations": Array [],
                        "name": "VirtualSize",
                      },
                    ],
                    "type": "variableDeclaration",
                    "variableType": Object {
                      "array": false,
                      "name": "DWORD",
                    },
                  },
                ],
                "type": "statementList",
              },
            },
            "name": "Misc",
            "type": "unionDeclaration",
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "VirtualAddress",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "SizeOfRawData",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "PointerToRawData",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "PointerToRelocations",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "PointerToLinenumbers",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "NumberOfRelocations",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "NumberOfLinenumbers",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "Characteristics",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "SECTION_CHARACTERISTICS",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_SECTION_HEADER",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ReadSectionData",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "sSecName",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "arraySelector": undefined,
                "name": "Data",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "UCHAR",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "SecHeader",
          "reference": true,
          "type": Object {
            "array": false,
            "name": "IMAGE_SECTION_HEADER",
          },
        },
      ],
    },
    "name": "IMAGE_SECTION_DATA",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "comment",
        "value": "CommentImageImportByName",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Hint",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "arraySelector": undefined,
                "name": "Name",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "BYTE",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "nNameLen",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
      ],
    },
    "name": "IMAGE_IMPORT_BY_NAME",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ReadImageImportDescriptor",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "nNameIndex",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulThrunk",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "nNameLen",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "sDllName",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulOriginalFirstThunkFOA",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declaration": Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "annotations": Array [],
                    "declarations": Array [
                      Object {
                        "annotations": Array [],
                        "name": "Characteristics",
                      },
                    ],
                    "type": "variableDeclaration",
                    "variableType": Object {
                      "array": false,
                      "name": "ULONG",
                    },
                  },
                  Object {
                    "annotations": Array [],
                    "declarations": Array [
                      Object {
                        "annotations": Array [
                          Object {
                            "key": "format",
                            "value": "hex",
                          },
                          Object {
                            "key": "comment",
                            "value": "CommentRVA2FOA",
                          },
                        ],
                        "name": "OriginalFirstThunk",
                      },
                    ],
                    "type": "variableDeclaration",
                    "variableType": Object {
                      "array": false,
                      "name": "ULONG",
                    },
                  },
                ],
                "type": "statementList",
              },
            },
            "name": "DUMMYUNIONNAME",
            "type": "unionDeclaration",
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "0 if not bound",
                  },
                ],
                "name": "TimeDateStamp",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "-1 if no forwarders",
                  },
                ],
                "name": "ForwarderChain",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVAString",
                  },
                ],
                "name": "Name",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                ],
                "name": "FirstThunk",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          undefined,
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "og_position",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "long",
                  },
                },
                Object {
                  "body": Object {
                    "statements": Array [
                      undefined,
                      Object {
                        "condition": undefined,
                        "trueStatement": Object {
                          "statements": Array [
                            Object {
                              "type": "breakStatement",
                            },
                          ],
                          "type": "statementList",
                        },
                        "type": "ifStatement",
                      },
                      Object {
                        "condition": undefined,
                        "trueStatement": Object {
                          "statements": Array [
                            undefined,
                            Object {
                              "condition": undefined,
                              "trueStatement": Object {
                                "statements": Array [
                                  undefined,
                                  undefined,
                                  Object {
                                    "annotations": Array [],
                                    "declarations": Array [
                                      Object {
                                        "annotations": Array [
                                          Object {
                                            "key": "open",
                                            "value": "false",
                                          },
                                        ],
                                        "arguments": Array [
                                          undefined,
                                        ],
                                        "name": "ImportByName",
                                      },
                                    ],
                                    "type": "variableDeclaration",
                                    "variableType": Object {
                                      "array": false,
                                      "name": "IMAGE_IMPORT_BY_NAME",
                                    },
                                  },
                                  undefined,
                                ],
                                "type": "statementList",
                              },
                              "type": "ifStatement",
                            },
                          ],
                          "type": "statementList",
                        },
                        "type": "ifStatement",
                      },
                      undefined,
                    ],
                    "type": "statementList",
                  },
                  "condition": undefined,
                  "type": "whileStatement",
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_IMPORT_DESCRIPTOR",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "read",
        "value": "ReadExportByName",
      },
      Object {
        "key": "comment",
        "value": "CommentExportByName",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulLocalDestRVA",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "sLocalJmpName",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "arraySelector": undefined,
                "name": "Function",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "char",
            },
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "sExportFuncName",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "name": "ulDestRVA",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "ULONG",
          },
        },
        Object {
          "name": "sJmpName",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "string",
          },
        },
      ],
    },
    "name": "IMAGE_EXPORT_BY_NAME",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "comment",
        "value": "CommentExportDirectory",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Characteristics",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "TimeDateStamp",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "time_t",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MajorVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "MinorVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVAString",
                  },
                ],
                "name": "Name",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Base",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "NumberOfFunctions",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "NumberOfNames",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                ],
                "name": "AddressOfFunctions",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                ],
                "name": "AddressOfNames",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                ],
                "name": "AddressOfNameOrdinals",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "nIndex",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "NameArrayFOA",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "OrdinalArrayFOA",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "FuncArrayFOA",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulNameRVA",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulNameFOA",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulFuncRVA",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "wOrdinal",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "sExportName",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "sJmpName",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "string",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulCurPos",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulEndPos",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          undefined,
          undefined,
          undefined,
          Object {
            "body": Object {
              "statements": Array [
                undefined,
                undefined,
                undefined,
                Object {
                  "condition": undefined,
                  "trueStatement": Object {
                    "statements": Array [
                      undefined,
                      undefined,
                      Object {
                        "condition": undefined,
                        "falseStatement": undefined,
                        "trueStatement": Object {
                          "statements": Array [
                            undefined,
                            undefined,
                            Object {
                              "annotations": Array [],
                              "declarations": Array [
                                Object {
                                  "annotations": Array [],
                                  "arguments": Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ],
                                  "name": "ExportByName",
                                },
                              ],
                              "type": "variableDeclaration",
                              "variableType": Object {
                                "array": false,
                                "name": "IMAGE_EXPORT_BY_NAME",
                              },
                            },
                          ],
                          "type": "statementList",
                        },
                        "type": "ifStatement",
                      },
                    ],
                    "type": "statementList",
                  },
                  "type": "ifStatement",
                },
                undefined,
                Object {
                  "condition": undefined,
                  "trueStatement": Object {
                    "statements": Array [
                      undefined,
                    ],
                    "type": "statementList",
                  },
                  "type": "ifStatement",
                },
              ],
              "type": "statementList",
            },
            "condition": undefined,
            "increment": undefined,
            "initialization": undefined,
            "type": "forStatement",
          },
          undefined,
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_EXPORT_DIRECTORY",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Length",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "arraySelector": undefined,
                      "name": "String",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "BYTE",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "pascal_wstring_t",
    "type": "structDeclaration",
  },
  Object {
    "alias": "RESOURCE_DIRECTORY_STRING",
    "annotations": Array [],
    "name": Object {
      "array": false,
      "name": "pascal_wstring_t",
    },
    "type": "typeAlias",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "optimize",
                    "value": "false",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentResourceDirectoryString",
                  },
                ],
                "arraySelector": undefined,
                "name": "Strings",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "RESOURCE_DIRECTORY_STRING",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "RESOURCE_DIRECTORY_STRINGS",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "originalPos",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                ],
                "name": "DataRVA",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "DataSize",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "CodePage",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Reserved",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          undefined,
          undefined,
          Object {
            "condition": undefined,
            "falseStatement": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "arraySelector": undefined,
                      "name": "Data",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "UCHAR",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          undefined,
        ],
        "type": "statementList",
      },
    },
    "name": "RESOURCE_DATA_ENTRY",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "IsNameEntry",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "originalPos",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "int",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Level",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          undefined,
          undefined,
          Object {
            "condition": undefined,
            "falseStatement": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "comment",
                          "value": "CommentResourceNameOffset",
                        },
                        Object {
                          "key": "format",
                          "value": "hex",
                        },
                      ],
                      "name": "NameOffset",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "DWORD",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "NextDWORD",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "condition": undefined,
            "falseStatement": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "format",
                          "value": "hex",
                        },
                      ],
                      "name": "SubdirectoryOffset",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "DWORD",
                  },
                },
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "dwMaskedOffset",
                    },
                  ],
                  "local": true,
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "DWORD",
                  },
                },
                undefined,
                undefined,
                undefined,
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "arguments": Array [
                        undefined,
                      ],
                      "name": "RsourceDirectoryTable",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "RESOURCE_DIRECTORY_TABLE",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "isNameEntry",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "name": "level",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "DWORD",
          },
        },
      ],
    },
    "name": "RESOURCE_DIRECTORY_ENTRY",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "comment",
        "value": "CommentResourceDirectoryTable",
      },
      Object {
        "key": "optimize",
        "value": "false",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "Level",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "comment",
                    "value": "Reserved, currently 0",
                  },
                ],
                "name": "Characteristics",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "TimeDateStamp",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "time_t",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "decimal",
                  },
                ],
                "name": "MajorVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "decimal",
                  },
                ],
                "name": "MinorVersion",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "decimal",
                  },
                ],
                "name": "NumberOfNameEntries",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "decimal",
                  },
                ],
                "name": "NumberOfIDEntries",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
          undefined,
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "optimize",
                          "value": "false",
                        },
                      ],
                      "arguments": Array [
                        undefined,
                        undefined,
                      ],
                      "arraySelector": undefined,
                      "name": "NameEntries",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "RESOURCE_DIRECTORY_ENTRY",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
          Object {
            "condition": undefined,
            "trueStatement": Object {
              "statements": Array [
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [
                        Object {
                          "key": "optimize",
                          "value": "false",
                        },
                      ],
                      "arguments": Array [
                        undefined,
                        undefined,
                      ],
                      "arraySelector": undefined,
                      "name": "IDEntries",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "RESOURCE_DIRECTORY_ENTRY",
                  },
                },
              ],
              "type": "statementList",
            },
            "type": "ifStatement",
          },
        ],
        "type": "statementList",
      },
      "parameters": Array [
        Object {
          "name": "level",
          "reference": false,
          "type": Object {
            "array": false,
            "name": "DWORD",
          },
        },
      ],
    },
    "name": "RESOURCE_DIRECTORY_TABLE",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "comment",
        "value": "CommentImageBaseRelocation",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentRVA2FOA",
                  },
                ],
                "name": "VirtualAddress",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "SizeOfBlock",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "DWORD",
            },
          },
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulBlockNum",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          undefined,
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [
                  Object {
                    "key": "format",
                    "value": "hex",
                  },
                  Object {
                    "key": "comment",
                    "value": "CommentBaseRelocBlock",
                  },
                ],
                "arraySelector": undefined,
                "name": "Block",
              },
            ],
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "WORD",
            },
          },
        ],
        "type": "statementList",
      },
    },
    "name": "IMAGE_BASE_RELOCATION",
    "type": "structDeclaration",
  },
  Object {
    "annotations": Array [
      Object {
        "key": "comment",
        "value": "CommentBaseRelocationTable",
      },
    ],
    "declaration": Object {
      "body": Object {
        "statements": Array [
          Object {
            "annotations": Array [],
            "declarations": Array [
              Object {
                "annotations": Array [],
                "name": "ulRelocNum",
              },
            ],
            "local": true,
            "type": "variableDeclaration",
            "variableType": Object {
              "array": false,
              "name": "ULONG",
            },
          },
          Object {
            "body": Object {
              "statements": Array [
                Object {
                  "condition": undefined,
                  "trueStatement": Object {
                    "statements": Array [
                      Object {
                        "type": "breakStatement",
                      },
                    ],
                    "type": "statementList",
                  },
                  "type": "ifStatement",
                },
                Object {
                  "annotations": Array [],
                  "declarations": Array [
                    Object {
                      "annotations": Array [],
                      "name": "BaseReloc",
                    },
                  ],
                  "type": "variableDeclaration",
                  "variableType": Object {
                    "array": false,
                    "name": "IMAGE_BASE_RELOCATION",
                  },
                },
                undefined,
              ],
              "type": "statementList",
            },
            "condition": undefined,
            "type": "whileStatement",
          },
        ],
        "type": "statementList",
      },
    },
    "name": "BASE_RELOCATION_TABLE",
    "type": "structDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [],
                    "name": "ulExportFOA",
                  },
                ],
                "local": true,
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "ULONG",
                },
              },
              undefined,
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [],
                    "name": "ExportDir",
                  },
                ],
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "IMAGE_EXPORT_DIRECTORY",
                },
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseEAT",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [],
                    "name": "ulImportFOA",
                  },
                ],
                "local": true,
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "ULONG",
                },
              },
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [],
                    "name": "ulOriginalFirstThunk",
                  },
                ],
                "local": true,
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "ULONG",
                },
              },
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [],
                    "name": "ulOriginalFirstThunkFOA",
                  },
                ],
                "local": true,
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "ULONG",
                },
              },
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [],
                    "name": "nImportIndex",
                  },
                ],
                "local": true,
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "int",
                },
              },
              undefined,
              Object {
                "body": Object {
                  "statements": Array [
                    undefined,
                    Object {
                      "condition": undefined,
                      "trueStatement": Object {
                        "statements": Array [
                          Object {
                            "type": "breakStatement",
                          },
                        ],
                        "type": "statementList",
                      },
                      "type": "ifStatement",
                    },
                    undefined,
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [],
                          "name": "ImportDescriptor",
                        },
                      ],
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "IMAGE_IMPORT_DESCRIPTOR",
                      },
                    },
                    undefined,
                  ],
                  "type": "statementList",
                },
                "condition": undefined,
                "type": "whileStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseIAT",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        undefined,
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "arguments": Array [
                undefined,
              ],
              "name": "ResourceDirectoryTable",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "RESOURCE_DIRECTORY_TABLE",
          },
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseResource",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseException",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseSecurity",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        undefined,
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "RelocTable",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "BASE_RELOCATION_TABLE",
          },
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseBaseReloc",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseDebug",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseTLS",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseBoundImport",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ParseDelayImport",
    "parameters": Array [],
    "returnType": Object {
      "name": "void",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    Object {
                      "assignmentExpression": undefined,
                      "type": "returnStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "increment": undefined,
          "initialization": undefined,
          "type": "forStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "RVA2FOA",
    "parameters": Array [
      Object {
        "name": "ulRVA",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "ULONG",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "ULONG",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "OptionalHeaderMagic",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "WORD",
          },
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CalcImageNtHeadersSize",
    "parameters": Array [
      Object {
        "name": "stNtHeader",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "IMAGE_NT_HEADERS",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "int",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ReadImageSectionHeader",
    "parameters": Array [
      Object {
        "name": "h",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "IMAGE_SECTION_HEADER",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ReadSectionData",
    "parameters": Array [
      Object {
        "name": "SecData",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "IMAGE_SECTION_DATA",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ReadImageImportDescriptor",
    "parameters": Array [
      Object {
        "name": "ImportDescriptor",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "IMAGE_IMPORT_DESCRIPTOR",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "ReadExportByName",
    "parameters": Array [
      Object {
        "name": "ExportByName",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "IMAGE_EXPORT_BY_NAME",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "i",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    Object {
                      "assignmentExpression": undefined,
                      "type": "returnStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "increment": undefined,
          "initialization": undefined,
          "type": "forStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "LocationRVA",
    "parameters": Array [
      Object {
        "name": "ulRVA",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "ULONG",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentRVA2FOA",
    "parameters": Array [
      Object {
        "name": "dwRVA",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "DWORD",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentRVAString",
    "parameters": Array [
      Object {
        "name": "dwRVA",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "DWORD",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentImageImportByName",
    "parameters": Array [
      Object {
        "name": "ImportByName",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "IMAGE_IMPORT_BY_NAME",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentExportByName",
    "parameters": Array [
      Object {
        "name": "ExportByName",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "IMAGE_EXPORT_BY_NAME",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentExportDirectory",
    "parameters": Array [
      Object {
        "name": "ExportDir",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "IMAGE_EXPORT_DIRECTORY",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "assignmentExpression": undefined,
                "type": "returnStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentBaseRelocBlock",
    "parameters": Array [
      Object {
        "name": "Block",
        "reference": false,
        "type": Object {
          "array": false,
          "name": "WORD",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentImageBaseRelocation",
    "parameters": Array [
      Object {
        "name": "BaseReloc",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "IMAGE_BASE_RELOCATION",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "dwMaskedOffset",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "DWORD",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "wsComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "wstring",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "loc",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "DWORD",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "actualLength",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "WORD",
          },
        },
        undefined,
        undefined,
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentResourceNameOffset",
    "parameters": Array [
      Object {
        "name": "NameOffset",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "DWORD",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetNameEntries",
    "parameters": Array [
      Object {
        "name": "ResourceDirectoryTable",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "RESOURCE_DIRECTORY_TABLE",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "short",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetLevel",
    "parameters": Array [
      Object {
        "name": "ResourceDirectoryEntry",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "RESOURCE_DIRECTORY_ENTRY",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "int",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": undefined,
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetType",
    "parameters": Array [
      Object {
        "name": "IntegerID",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "DWORD",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "level",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "statements": Array [
            Object {
              "body": Object {
                "statements": Array [
                  undefined,
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                1,
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  undefined,
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                2,
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  undefined,
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                3,
              ],
            },
            Object {
              "body": Object {
                "statements": Array [
                  Object {
                    "type": "breakStatement",
                  },
                ],
                "type": "statementList",
              },
              "labels": Array [
                Object {
                  "type": "defaultStatement",
                },
              ],
            },
            Object {
              "body": Object {
                "statements": Array [],
                "type": "statementList",
              },
              "labels": Array [],
            },
          ],
          "type": "switchStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentIntegerID",
    "parameters": Array [
      Object {
        "name": "IntegerID",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "DWORD",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "loc",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "DWORD",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "actualLength",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "WORD",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "BlockNumber",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "DWORD",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "myIndex",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "blockStart",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "DWORD",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "curLoc",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "DWORD",
          },
        },
        Object {
          "body": Object {
            "statements": Array [
              undefined,
              undefined,
            ],
            "type": "statementList",
          },
          "condition": undefined,
          "type": "whileStatement",
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "myStringID",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "DWORD",
          },
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [],
                    "name": "wsComment",
                  },
                ],
                "local": true,
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "wstring",
                },
              },
              undefined,
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentResourceDirectoryString",
    "parameters": Array [
      Object {
        "name": "str",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "RESOURCE_DIRECTORY_STRING",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "totalEntries",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "DWORD",
          },
        },
        Object {
          "condition": undefined,
          "falseStatement": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentResourceDirectoryTable",
    "parameters": Array [
      Object {
        "name": "ResourceDirectoryTable",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "RESOURCE_DIRECTORY_TABLE",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetEntryIntegerID",
    "parameters": Array [
      Object {
        "name": "ResourceDirectoryEntry",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "RESOURCE_DIRECTORY_ENTRY",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "int",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetEntryIsNameEntry",
    "parameters": Array [
      Object {
        "name": "ResourceDirectoryEntry",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "RESOURCE_DIRECTORY_ENTRY",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "int",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "GetParentTableLevel",
    "parameters": Array [
      Object {
        "name": "ResourceDirectoryTable",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "RESOURCE_DIRECTORY_TABLE",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "int",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "ParentTableLevel",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "int",
          },
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              Object {
                "annotations": Array [],
                "declarations": Array [
                  Object {
                    "annotations": Array [],
                    "name": "BaseEntryIsNameEntry",
                  },
                ],
                "local": true,
                "type": "variableDeclaration",
                "variableType": Object {
                  "array": false,
                  "name": "int",
                },
              },
              Object {
                "condition": undefined,
                "trueStatement": Object {
                  "statements": Array [
                    Object {
                      "annotations": Array [],
                      "declarations": Array [
                        Object {
                          "annotations": Array [],
                          "name": "BaseEntryIntegerID",
                        },
                      ],
                      "local": true,
                      "type": "variableDeclaration",
                      "variableType": Object {
                        "array": false,
                        "name": "int",
                      },
                    },
                    Object {
                      "condition": undefined,
                      "trueStatement": Object {
                        "statements": Array [
                          Object {
                            "assignmentExpression": undefined,
                            "type": "returnStatement",
                          },
                        ],
                        "type": "statementList",
                      },
                      "type": "ifStatement",
                    },
                  ],
                  "type": "statementList",
                },
                "type": "ifStatement",
              },
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "IsResourceDirectoryString",
    "parameters": Array [
      Object {
        "name": "ResourceDataEntry",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "RESOURCE_DATA_ENTRY",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "int",
    },
    "type": "functionDeclaration",
  },
  Object {
    "content": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "name": "sComment",
            },
          ],
          "local": true,
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "string",
          },
        },
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "forwardDeclaration": false,
    "name": "CommentBaseRelocationTable",
    "parameters": Array [
      Object {
        "name": "RelocTable",
        "reference": true,
        "type": Object {
          "array": false,
          "name": "BASE_RELOCATION_TABLE",
        },
      },
    ],
    "returnType": Object {
      "array": false,
      "name": "string",
    },
    "type": "functionDeclaration",
  },
  undefined,
  undefined,
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "bgcolor",
            "value": "cLtPurple",
          },
        ],
        "name": "DosHeader",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "IMAGE_DOS_HEADER",
    },
  },
  Object {
    "condition": undefined,
    "trueStatement": Object {
      "statements": Array [
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "type": "ifStatement",
  },
  Object {
    "condition": undefined,
    "trueStatement": Object {
      "statements": Array [
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "type": "ifStatement",
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [],
        "name": "DosStub",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "IMAGE_DOS_STUB",
    },
  },
  undefined,
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "bgcolor",
            "value": "cLtPurple",
          },
        ],
        "name": "NtHeader",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "IMAGE_NT_HEADERS",
    },
  },
  Object {
    "condition": undefined,
    "trueStatement": Object {
      "statements": Array [
        undefined,
        Object {
          "assignmentExpression": undefined,
          "type": "returnStatement",
        },
      ],
      "type": "statementList",
    },
    "type": "ifStatement",
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [
          Object {
            "key": "bgcolor",
            "value": "cLtGray",
          },
        ],
        "arraySelector": undefined,
        "name": "SectionHeaders",
      },
    ],
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "IMAGE_SECTION_HEADER",
    },
  },
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [],
        "name": "ulRawHeaderSize",
      },
    ],
    "local": true,
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "ULONG",
    },
  },
  Object {
    "condition": undefined,
    "trueStatement": Object {
      "statements": Array [
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [
                Object {
                  "key": "hidden",
                  "value": "true",
                },
                Object {
                  "key": "fgcolor",
                  "value": "cRed",
                },
                Object {
                  "key": "comment",
                  "value": "Space between header and first section",
                },
              ],
              "arraySelector": undefined,
              "name": "Space2",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "UCHAR",
          },
        },
      ],
      "type": "statementList",
    },
    "type": "ifStatement",
  },
  undefined,
  undefined,
  Object {
    "annotations": Array [],
    "declarations": Array [
      Object {
        "annotations": Array [],
        "name": "ulIndex",
      },
    ],
    "local": true,
    "type": "variableDeclaration",
    "variableType": Object {
      "array": false,
      "name": "ULONG",
    },
  },
  Object {
    "body": Object {
      "statements": Array [
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "condition": undefined,
          "trueStatement": Object {
            "statements": Array [
              undefined,
            ],
            "type": "statementList",
          },
          "type": "ifStatement",
        },
        Object {
          "annotations": Array [],
          "declarations": Array [
            Object {
              "annotations": Array [],
              "arguments": Array [
                undefined,
              ],
              "name": "Section",
            },
          ],
          "type": "variableDeclaration",
          "variableType": Object {
            "array": false,
            "name": "IMAGE_SECTION_DATA",
          },
        },
      ],
      "type": "statementList",
    },
    "condition": undefined,
    "increment": undefined,
    "initialization": undefined,
    "type": "forStatement",
  },
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
]
`;
